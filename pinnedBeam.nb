(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    150751,       3003]
NotebookOptionsPosition[    145027,       2900]
NotebookOutlinePosition[    145426,       2916]
CellTagsIndexPosition[    145383,       2913]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pinned Beam", "Title",
 CellChangeTimes->{{3.7493952373039913`*^9, 3.749395261850175*^9}, {
   3.7494806976257553`*^9, 3.749480699514193*^9}, {3.749480741593113*^9, 
   3.749480766160095*^9}, {3.749480977440741*^9, 3.749480983422764*^9}, 
   3.7807558250515413`*^9, {3.780839512479217*^9, 3.780839521472987*^9}, {
   3.7813073312422256`*^9, 3.7813073370857306`*^9}, {3.819062315488104*^9, 
   3.8190623211809444`*^9}},ExpressionUUID->"9ec5461c-94d6-470b-87a5-\
037369f4d4fc"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
t0KFCtHR0cplVFrugAEDSH5e9sWxpKSkxo0b69McC8EQluvg4CBihEJAy0UQ
BEEQE2TOnDn0Am1jYwOCZ7RNp6amdurUiW5d5ZNPrQgPDy9VqhRHRHfu3Pn+
/XuN6y5durR48eLsrlAuo+7ts8GDB2/btk2fyC0WtFwEQRAEQQwEa7lVq1Y1
5qY5GRmseOc3EMilS5eslGDT7/LASqxWlovoDFougiAIgiAGQkLLzcnJYWcw
69WrFyf1rQ7k5+c/fvyY46K2trac1/9VYjTLvXz5cvXq1dklvXv33rhx4/z5
88ePH69DhUbg2LFjKoeUTJs2bc2aNVu3bh09evTVq1dbtWrFfjps2LDdu3ez
8+gWKI47iChJCmxqlhseHu7wX27fvq1xLWK506dPX7BgAVougiAIgpgIElpu
gSIT1sCBA2HTP/30k1izm+bm5iqLLuiHxhU5EguGwwlJneW6uLiQmXJZwLeV
awBOnDjRpUsXmlKBAMXc3d29vb2J+5kgEFhwcDCILuxeR0fH169fk+UPHz6E
Uwhcd/369QMGDGBnGIBjunnz5kmTJsHOhyNCFsIea926dWRkZHZ2doFIlgu3
MFWqVNHfcvfs2aM8X0fDhg0hWv4VwYShDBzTFy9e3L17V7etIwiCIAgiLtJa
bsHHjM+PHj0St1qos3Tp0vpYrvKjWraAtbU1UbVhw4Zt2rRp8uTJbH5esNZW
rVpBgc6dO9+5c4cuDwsLc3NzCwkJ6dWrF1vzlClTVq1aNW/ePN3yFBuBCxcu
jBo1atu2bX379oVWDBo0iIrrzZs3lyxZAjbLSWlx6tQpUPdly5axeyAjI2Pf
vn30v6JYrqurK+f2RIdKduzY0ahRIytVHDt2TLfAEARBEASRioCAgC+//FJa
yzUcbFKJunXrakyeq63lgpW9fv369OnTEyZM+O2332h+3vv37w8ZMmTv3r1Q
ANxp5MiRUVFRpAaQeT8/PxDd7du305+2p06dumbNmhkzZsyfP//atWsG2BMi
ADcj4Ksg84GBgfBfUHo2eW5MTIzKfBaHDh26desWT7WiW27NmjV1m3OYHfPA
AW5JND7ORRAEQRDEpAABY6/mBrXc6Ohomv7VOAQFBVWrVo22buzYsfzlY2Nj
x4wZI9ByaQHl/LxJSUlbtmyhmY53794dFxdHKwHRDQkJeffuHdxikCWkANjy
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
Prx69Wr033Xp0qVnz576igjzSsezZ8/etGmTvjf4448/Uth20lM818ipaHlO
Nj7lxsXFsc+BGj/77LPiu2A8PT3FDi2bcisqKmjtDz30EH9EbteuXexJN19f
34SEBLYwPj6+WbNm2lVWOcrJbNV9+/alT9LItYODMDPl0smjzm1v1apVs2bN
mjNnzk8//WSJYYJZkHIBbAYp1+J4yqWDVGho6PXr1/U1MDLlsjBGXYkVfquM
SLmS226ddBURvn//vqTSMSXhjRs3GniD7J5YEhQUpP1TY1JuRkbG8OHDJWP7
5JNP1hj08MMP88aSevcUQSUNDKdcasxuGzCQcmmQ4tpXrlzppFVlmGf15s2b
V1ZWUrN//OMfAwYMyM7O1tctT7mrV6/W1wYcls6Uu3Xr1oKCAt6Gvtfap3hk
//79kZGRYWFhu3fvFpd/+eWXEyZMyMrKWrt27bZt26w6fjAGUi6AzSDlWhwd
a1jV4H79+hluwOh86vnkyZNim7Nnz2q3qTHlFhcXBwcH84Nm165dv//+e50t
+VXQDh060DHRwLs7evTo66+/7qSpbDt58mTtBnFxcY899pi+lPvbb7+lpqZS
VnQyAw3yiy++YB3Sp0cd7tixQ7sZff70Izqg6Hwj7H4DAymX35DAODs70y+C
PQTEifcnp6Sk0D969eqVm5urs0OKwTQeDw8PahYYGKg9QzKAdsrdu3fviBEj
Dh8+zBrQSRZtdaNGjWJ/CKAt6u7du+xHdJ44e/bsRYsW0fndL7/8whZSg0GD
Bm3YsIH2EvTlPXPmjALvCv4OKRfANuhw3L9/f6TcWoqn3H379umralReXt6p
ms7iuUzPnj1ZmxofJWMTCzRu3Pj999/X14Zf7NVOuXT87WQ2cZDZ2dmGG+us
8FtlYsql41GXLl2024j3XVAMptUZqATN6hQzBm5pAPtx/PjxrKysa9euFRQU
sErf586ds+oaJSmX1tijR49t27bxMcTHx48ePZq+AvSd/eOPP2iTS09P54OM
jIykc8+1a9cOGzasSnNixRrQfn79+vUTJ0787LPPrDp+MIYNUm5ZWZmpVekB
1OfVV19lf6pGyq2N6KDGr8HKqH0mw9WrV+no6WTwZoCq6pTr5uamsyq9nagx
5cbExHhW8/f319lmzZo1vI23t7eB1VVUVFy8eJH9sho2bCj5m7I6UIwvKSlR
ehSW1K5dO/rN7tq1i87p2G95xIgRVl3junXrPP+uuLi4V69eP/zwAxvDtGnT
UlNTX3jhhQsXLnh5edFL2rdvT8tZg9jYWOpBMkhqQCeD9M01fCcS2IwNUi6t
QqwbAuCwcMdCrcafHbNNyuVlxYxJudqT2dqVGlOuZZ0/f55fo7NIiTc7dPjw
YV9fX6VHAWDvrJpyly1bRj27uroi5QL06dOnTp06SLm1ly1TbpcuXZydnWld
UVFRvISoTpRyx40bZ7iN4pRKuf/73/9MLcdcW9D7Ki8vV3oUNSssLHRzc1N6
FOC4rJRyp06d6ufn17BhQyfNQ8S0q7Fs/w5o586dflrYZJ5cRkaG+NNTp04p
NVrQVlxc/MorryDl1l6UK/Lz8xs1amSDlNupUyfaVGJjYw0UCR05ciR9zefO
nWv/t4RduXIlOjq6fv36AwYMsPa6fv/9dx8fH5ZyUX/K9qZPny4ehuh3Ydmp
aAFMYtmUGxwcHKQhTqWocwIcMMk333zTunXrjh07Jicni08iiw9x7927t337
9uJPDUywAwbQJ0kbrcX/BDxx4kT2vUDKrdXol0jfRH2TCVhESEgIBcL4+HgD
s9oOHz6clb4tLCy03kgsiD07ZmrlMlPt27evQ4cOtCIXFxdWsNWqqwNtubm5
9MlT1hUf7FJ6UOC4zE+5p0+fHlitbt26Tn9HaUGcWR3kof3Gli1b6JO8devW
5s2btVNuSkoKHT7atGnz2WefIeWaKSkpiT49ihlsq9aeglWeF198kf1ekHJr
NXaqYqWKn/fv36dNzs3NLS4urqioyEDLPXv20D4hLy/PGsOwBtqJffjhh9ZO
uew6QJMmTWSXQgaLsF5ZMQCTmJNy09PTx48fL5bX1DZo0CCLj9nB3bt3T5Jy
t23b9swzz/j7+1M8o0iWWE1lT+DazJkzZ6ZOnco/5DfffJO28xMnTpjZLVKu
OqxevdrHx8caKfevv/4aN24cbSELFixQ5ZeXkqeXl9fMmTOt1P9PP/3Uu3fv
Fi1arF+/3kqrACMh5YKdMDXlrlixgtevZHUnDejatauBypUgj5hyR48enZWV
9dFHH9FHzWduB/Pl5+dTFhU3Zvqo2WYve3r5tWvXspstkXJru6VLl+bk5Fi8
2ytXroRr3Lx50+Kd2wN2obV58+bW6Hzfvn10SGrTpg3lK2v0DybhKffhhx+2
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
AGPZufY=
    "], {{0, 405}, {930, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{509., Automatic},
  ImageSizeRaw->{930, 405},
  PlotRange->{{0, 930}, {0, 
   405}}]], "Input",ExpressionUUID->"f42f1527-2a7e-49da-9831-240e714be9ae"]], \
"Text",
 CellChangeTimes->{
  3.781021713455699*^9, {3.7839089097194533`*^9, 3.7839089097194533`*^9}, {
   3.7839089852115593`*^9, 
   3.7839089852115593`*^9}},ExpressionUUID->"7d7ce76e-bfc7-4638-a6b9-\
7a8e030c04ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"$Assumptions", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Beta]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"EI", ">", "0"}], " ", "&&", 
    RowBox[{"L", ">", "0"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.783864362143875*^9, 3.783864363152231*^9}, {
  3.7843192699320803`*^9, 3.784319312812108*^9}, {3.7843203061772766`*^9, 
  3.784320313584563*^9}, {3.7843205488219333`*^9, 3.7843205852637997`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"84ca69d4-72b7-4ed7-b57d-12bf6473f62c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]", ">", "0"}], "&&", 
   RowBox[{"EI", ">", "0"}], "&&", 
   RowBox[{"L", ">", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.784319314422087*^9, 3.784319324341344*^9}, 
   3.7843195949986415`*^9, 3.784319626441378*^9, 3.7843201109272966`*^9, 
   3.784320330697648*^9, 3.784320366758752*^9, {3.7843205572136497`*^9, 
   3.7843205953388295`*^9}, 3.784320975171258*^9, {3.7843210596413703`*^9, 
   3.784321074836786*^9}, 3.7843218734356513`*^9, 3.784323282898205*^9, 
   3.8190623319936423`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"33689173-b884-4965-853b-ab0d9d859ffd"]
}, Open  ]],

Cell["\<\
The differential eigenvalue problem without the boundary conditions:\
\>", "Text",
 CellChangeTimes->{{3.783864220902864*^9, 
  3.78386424277433*^9}},ExpressionUUID->"c057dc00-9d71-4a5c-8dfc-\
74cbdc11555b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ODE", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Y", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "4"}], "}"}]}], "]"}], "-", 
    RowBox[{
     SuperscriptBox["\[Beta]", "4"], 
     RowBox[{"Y", "[", "x", "]"}]}]}], "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.783802340252371*^9, 3.78380238388377*^9}, {
   3.7838025769082623`*^9, 3.783802578455449*^9}, {3.783802771810004*^9, 
   3.783802777692604*^9}, {3.783802870032243*^9, 3.783802877671936*^9}, 
   3.7838046129742823`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"633dc384-f916-47f4-8e55-33d0a1c6b86f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Beta]", "4"]}], " ", 
    RowBox[{"Y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["Y", 
     TagBox[
      RowBox[{"(", "4", ")"}],
      Derivative],
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{
  3.783802386433547*^9, 3.783802579188348*^9, {3.783802773054318*^9, 
   3.783802778074746*^9}, {3.783802873704917*^9, 3.783802878143734*^9}, {
   3.783804645178643*^9, 3.783804671280753*^9}, 3.783804720801852*^9, 
   3.783864365294092*^9, 3.784295225373856*^9, 3.7843190001438923`*^9, {
   3.7843191357161107`*^9, 3.784319187544666*^9}, 3.7843192363106785`*^9, 
   3.7843193245041213`*^9, 3.78431959526647*^9, 3.78431962661067*^9, 
   3.7843201111928577`*^9, 3.784320330934469*^9, 3.7843203669462395`*^9, {
   3.784320573856288*^9, 3.784320595541911*^9}, 3.784320975343089*^9, {
   3.78432105982879*^9, 3.7843210749929953`*^9}, 3.784321873591864*^9, 
   3.784323283229981*^9, 3.819062332104607*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9e482f4b-01f1-4220-bbd5-3cf2882338f8"]
}, Open  ]],

Cell["General Solution:", "Text",
 CellChangeTimes->{{3.783864246904002*^9, 
  3.783864253934268*^9}},ExpressionUUID->"05cd7986-865a-4530-8fd9-\
faf00c9a6f7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Y", "[", "x", "]"}], "/.", 
     RowBox[{
      RowBox[{"DSolve", "[", 
       RowBox[{"ODE", ",", 
        RowBox[{"Y", "[", "x", "]"}], ",", "x"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "//", "ExpToTrig"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7838023938550797`*^9, 3.783802406788081*^9}, {
   3.783802606206026*^9, 3.7838026244741907`*^9}, {3.783802815450254*^9, 
   3.7838028200734043`*^9}, 3.783802889997388*^9, {3.783864160199617*^9, 
   3.783864187514804*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"772894fb-de7e-452f-a617-59cf75db14bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"1"},
    "C"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     TemplateBox[{"2"},
      "C"], "+", 
     TemplateBox[{"4"},
      "C"]}], ")"}], " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}], "+", 
  RowBox[{
   TemplateBox[{"3"},
    "C"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      TemplateBox[{"2"},
       "C"]}], "+", 
     TemplateBox[{"4"},
      "C"]}], ")"}], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.783802407392247*^9, 3.783802581060392*^9, {3.783802611868856*^9, 
   3.7838026249498863`*^9}, {3.783802774465711*^9, 3.783802779507715*^9}, 
   3.78380282070548*^9, {3.783802880034061*^9, 3.7838028903800707`*^9}, {
   3.783804645222454*^9, 3.783804671291503*^9}, 3.783804720817924*^9, {
   3.783864164645969*^9, 3.78386418787516*^9}, 3.783864367250594*^9, 
   3.7842952286277914`*^9, 3.784319002221487*^9, {3.7843191358098373`*^9, 
   3.78431918762279*^9}, 3.7843192364044385`*^9, 3.7843193245965433`*^9, 
   3.7843195953602047`*^9, 3.7843196266953335`*^9, 3.7843201112881875`*^9, 
   3.784320331012617*^9, 3.784320367024315*^9, {3.784320573965669*^9, 
   3.784320595651289*^9}, 3.7843209754368467`*^9, {3.78432105993814*^9, 
   3.784321075071105*^9}, 3.7843218736699705`*^9, 3.7843232834304767`*^9, 
   3.8190623321725855`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"15fd281f-793c-4b76-a9f3-8607b8a4152a"]
}, Open  ]],

Cell["Thus, we can write this in the following form:", "Text",
 CellChangeTimes->{{3.783864259234885*^9, 
  3.783864271863555*^9}},ExpressionUUID->"2319a454-1cab-4a22-92e6-\
7b9179b61273"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"x", " ", "\[Beta]"}], "]"}], " ", 
    TemplateBox[{"2"},
     "C"]}], "+", 
   RowBox[{
    RowBox[{"Sinh", "[", 
     RowBox[{"x", " ", "\[Beta]"}], "]"}], " ", 
    TemplateBox[{"4"},
     "C"]}], "+", 
   RowBox[{
    TemplateBox[{"1"},
     "C"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"x", " ", "\[Beta]"}], "]"}]}], "+", 
   RowBox[{
    TemplateBox[{"3"},
     "C"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"x", " ", "\[Beta]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.783802921911409*^9, 3.783802942921773*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"d6b9c14f-c377-49be-b310-61d326396f5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[{"1"},
    "C"], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}], "+", 
  RowBox[{
   TemplateBox[{"2"},
    "C"], " ", 
   RowBox[{"Cosh", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}], "+", 
  RowBox[{
   TemplateBox[{"3"},
    "C"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}], "+", 
  RowBox[{
   TemplateBox[{"4"},
    "C"], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"x", " ", "\[Beta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7838029433861523`*^9, {3.7838046452339563`*^9, 3.7838046713344088`*^9}, 
   3.783804720852117*^9, 3.783864369941948*^9, 3.7842952311945*^9, 
   3.7843190040023146`*^9, {3.7843191359035273`*^9, 3.78431918770092*^9}, 
   3.7843192364825106`*^9, 3.784319324688648*^9, 3.7843195954538956`*^9, 
   3.7843196267800674`*^9, 3.784320111381908*^9, 3.784320331106349*^9, 
   3.7843203671180787`*^9, {3.7843205740593596`*^9, 3.784320595760607*^9}, 
   3.7843209755149612`*^9, {3.7843210600318794`*^9, 3.784321075149248*^9}, 
   3.7843218737480755`*^9, 3.7843232835775833`*^9, 3.81906233225356*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0311d1f3-640b-4af2-817c-5a73048201c7"]
}, Open  ]],

Cell["Now we apply the boundary conditions:", "Text",
 CellChangeTimes->{{3.783864279762621*^9, 
  3.783864289222172*^9}},ExpressionUUID->"a0d825e2-ad93-4d39-9d0a-\
86cec3c4cb98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BCs", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sol", "\[Equal]", "0"}], ")"}], "/.", 
      RowBox[{"x", "\[Rule]", "0"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"EI", " ", 
         RowBox[{"D", "[", 
          RowBox[{"sol", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "\[Equal]", "0"}], 
       ")"}], "/.", 
      RowBox[{"x", "\[Rule]", "0"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sol", "\[Equal]", "0"}], ")"}], "/.", 
      RowBox[{"x", "\[Rule]", "L"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"EI", " ", 
          RowBox[{"D", "[", 
           RowBox[{"sol", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "+", 
         RowBox[{"k", " ", 
          RowBox[{"D", "[", 
           RowBox[{"sol", ",", "x"}], "]"}]}]}], "\[Equal]", "0"}], ")"}], "/.", 
      RowBox[{"x", "\[Rule]", "L"}]}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.783802627965227*^9, 3.783802696115142*^9}, 
   3.783802797689808*^9, {3.783802979833956*^9, 3.783803118377933*^9}, {
   3.783864294661861*^9, 3.7838643493410883`*^9}, {3.7838643943226023`*^9, 
   3.7838644259083967`*^9}, {3.784295279174888*^9, 3.784295299670076*^9}, {
   3.7843180040569696`*^9, 3.7843180200524015`*^9}, {3.7843181246668715`*^9, 
   3.7843181694636936`*^9}, {3.784318204001952*^9, 3.7843182259280615`*^9}, {
   3.7843185389339256`*^9, 3.7843185410948153`*^9}, {3.7843185769726915`*^9, 
   3.7843185973054113`*^9}, {3.7843186324055967`*^9, 3.7843186327805085`*^9}},
 
 CellLabel->"In[6]:=",ExpressionUUID->"c3b60b85-c20b-4e55-86b7-9398f9cb2e5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     TemplateBox[{"1"},
      "C"], "+", 
     TemplateBox[{"2"},
      "C"]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"EI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Beta]", "2"]}], " ", 
        TemplateBox[{"1"},
         "C"]}], "+", 
       RowBox[{
        SuperscriptBox["\[Beta]", "2"], " ", 
        TemplateBox[{"2"},
         "C"]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      TemplateBox[{"1"},
       "C"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"2"},
       "C"], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"3"},
       "C"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "+", 
     RowBox[{
      TemplateBox[{"4"},
       "C"], " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"L", " ", "\[Beta]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", " ", 
         TemplateBox[{"3"},
          "C"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         TemplateBox[{"4"},
          "C"], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "-", 
        RowBox[{"\[Beta]", " ", 
         TemplateBox[{"1"},
          "C"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "+", 
        RowBox[{"\[Beta]", " ", 
         TemplateBox[{"2"},
          "C"], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"EI", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Beta]", "2"]}], " ", 
         TemplateBox[{"1"},
          "C"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         TemplateBox[{"2"},
          "C"], " ", 
         RowBox[{"Cosh", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         TemplateBox[{"3"},
          "C"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], " ", 
         TemplateBox[{"4"},
          "C"], " ", 
         RowBox[{"Sinh", "[", 
          RowBox[{"L", " ", "\[Beta]"}], "]"}]}]}], ")"}]}]}], "\[Equal]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7838026552683077`*^9, 3.783802696677287*^9}, 
   3.78380279822828*^9, 3.7838029475695143`*^9, 3.7838030772220078`*^9, 
   3.7838031215746593`*^9, {3.7838046452640123`*^9, 3.783804671345397*^9}, 
   3.783804720866456*^9, 3.7838643728255033`*^9, 3.783864427406157*^9, 
   3.7843187271303844`*^9, 3.784319006232501*^9, {3.7843191359972906`*^9, 
   3.784319187794608*^9}, 3.7843192365762377`*^9, 3.784319324790122*^9, 
   3.7843195955476294`*^9, 3.7843196268803864`*^9, 3.7843201114924374`*^9, 
   3.784320331201225*^9, 3.7843203671961484`*^9, {3.784320574168745*^9, 
   3.7843205958543315`*^9}, 3.7843209756086607`*^9, {3.784321060141218*^9, 
   3.784321075227358*^9}, 3.7843218738418055`*^9, 3.7843232836999645`*^9, 
   3.8190623322885494`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"bce89112-8053-4d07-9b0e-ddf305d42acc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C1Rule", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"BCs", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      TemplateBox[{"1"},
       "C"]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.783803142558516*^9, 3.7838031771944733`*^9}, {
  3.7838032618585567`*^9, 3.783803287228467*^9}, {3.783803614729732*^9, 
  3.783803617592903*^9}, {3.78431890379121*^9, 3.7843189136654873`*^9}, {
  3.7843191522630224`*^9, 3.7843191524194574`*^9}, {3.784319227824602*^9, 
  3.784319229015747*^9}, {3.784319603133425*^9, 3.7843196065723343`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e837aa5b-79f9-44a6-aed4-c868ffe309b0"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"1"},
   "C"], "\[Rule]", 
  RowBox[{"-", 
   TemplateBox[{"2"},
    "C"]}]}]], "Output",
 CellChangeTimes->{{3.7838031668466797`*^9, 3.7838031775365334`*^9}, {
   3.783803263487678*^9, 3.78380328774183*^9}, 3.783803517894945*^9, 
   3.783803618216704*^9, {3.783804645276669*^9, 3.783804671389783*^9}, 
   3.783804720901472*^9, 3.7838644335331984`*^9, 3.7843189152519245`*^9, 
   3.784319010204715*^9, {3.784319136106606*^9, 3.7843191878883357`*^9}, 
   3.784319236685588*^9, 3.7843193248889112`*^9, 3.7843195956413536`*^9, 
   3.78431962698064*^9, 3.784320111586128*^9, 3.784320331278037*^9, 
   3.784320367289874*^9, {3.784320574262436*^9, 3.784320595963687*^9}, 
   3.7843209757179995`*^9, {3.7843210602349443`*^9, 3.784321075305425*^9}, 
   3.784321873904305*^9, 3.784323283831464*^9, 3.8190623323255367`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"5cd40ec6-0367-4b62-ba53-1efeb9b8d3c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C2Rule", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"BCs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "/.", "C1Rule"}], ",", 
      TemplateBox[{"2"},
       "C"]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.783803142558516*^9, 3.7838031771944733`*^9}, {
  3.7838032618585567`*^9, 3.783803287228467*^9}, {3.783803614729732*^9, 
  3.783803617592903*^9}, {3.78431890379121*^9, 3.7843189136654873`*^9}, {
  3.7843191522630224`*^9, 3.7843191524194574`*^9}, {3.784319227824602*^9, 
  3.784319229015747*^9}, {3.7843193816116486`*^9, 3.7843194458488626`*^9}, {
  3.7843196091210537`*^9, 3.7843196162593117`*^9}, {3.784320088854213*^9, 
  3.7843200895887685`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"ff1331ad-3ac7-42bd-bbac-9183f8494957"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"2"},
   "C"], "\[Rule]", "0"}]], "Output",
 CellChangeTimes->{{3.7838031668466797`*^9, 3.7838031775365334`*^9}, {
   3.783803263487678*^9, 3.78380328774183*^9}, 3.783803517894945*^9, 
   3.783803618216704*^9, {3.783804645276669*^9, 3.783804671389783*^9}, 
   3.783804720901472*^9, 3.7838644335331984`*^9, 3.7843189152519245`*^9, 
   3.784319010204715*^9, {3.784319136106606*^9, 3.7843191878883357`*^9}, 
   3.784319236685588*^9, 3.7843193248889112`*^9, 3.7843194137216063`*^9, 
   3.7843194474436564`*^9, 3.7843195957350807`*^9, 3.78431962708088*^9, 
   3.7843201116798964`*^9, 3.7843203313561726`*^9, 3.7843203673679943`*^9, {
   3.784320574340554*^9, 3.7843205960669785`*^9}, 3.7843209757961073`*^9, {
   3.7843210603442955`*^9, 3.7843210753835306`*^9}, 3.7843218739824343`*^9, 
   3.784323283981071*^9, 3.8190623323595257`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"66164a90-123e-4445-a26a-203d0cbdb54e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C4Rule", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"BCs", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/.", "C1Rule"}], "/.", "C2Rule"}], 
      ",", 
      TemplateBox[{"4"},
       "C"]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7843197534846554`*^9, 3.7843197859045076`*^9}, {
  3.7843199074940243`*^9, 3.784319909313026*^9}, {3.7843200834322467`*^9, 
  3.7843201024015727`*^9}, {3.7843203447076073`*^9, 3.7843203492060776`*^9}, {
  3.7843209503441315`*^9, 3.784320955409854*^9}, {3.784321041946724*^9, 
  3.784321046219696*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6bb9ae48-db51-4234-9cd4-1a1fc51276f4"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"4"},
   "C"], "\[Rule]", 
  RowBox[{
   RowBox[{"-", 
    TemplateBox[{"3"},
     "C"]}], " ", 
   RowBox[{"Csch", "[", 
    RowBox[{"L", " ", "\[Beta]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"L", " ", "\[Beta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.7843199110964427`*^9, {3.7843200849943733`*^9, 3.7843201117735863`*^9}, 
   3.784320331434216*^9, 3.7843203674617105`*^9, {3.7843205744342723`*^9, 
   3.784320596160709*^9}, 3.784320975889841*^9, {3.784321060422407*^9, 
   3.7843210754616537`*^9}, 3.784321874044881*^9, 3.784323284225083*^9, 
   3.8190623323985133`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"c13329b0-3615-41aa-87dd-df19e43bbb31"]
}, Open  ]],

Cell["\<\
Finally, we use the fourth BC to get the characteristic equation: \
\>", "Text",
 CellChangeTimes->{{3.783864669314638*^9, 3.783864693897974*^9}, {
  3.784320183717446*^9, 
  3.7843201891759324`*^9}},ExpressionUUID->"38131bf0-d807-43da-98e9-\
ee3ebe48a754"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"charEq", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"BCs", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "/.", "C1Rule"}], "/.", "C2Rule"}], "/.",
       "C4Rule"}], "/.", 
     RowBox[{"k", "\[Rule]", 
      RowBox[{".5", " ", 
       FractionBox["EI", "L"]}]}]}], "/.", 
    RowBox[{
     TemplateBox[{"3"},
      "C"], "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.783803345267906*^9, 3.783803392580495*^9}, {
  3.783803439846434*^9, 3.783803442073452*^9}, {3.783803501299638*^9, 
  3.7838035078175898`*^9}, {3.7838035633104677`*^9, 3.783803569740658*^9}, {
  3.783803676683372*^9, 3.7838037441718616`*^9}, {3.7838037798814993`*^9, 
  3.7838038139840107`*^9}, {3.783864699234994*^9, 3.783864770911437*^9}, {
  3.7843201955712404`*^9, 3.784320258796032*^9}, {3.784320295592619*^9, 
  3.7843203237353907`*^9}, {3.7843203548883085`*^9, 3.784320373112132*^9}, {
  3.7843204049769583`*^9, 3.7843204153830595`*^9}, {3.7843204482842007`*^9, 
  3.7843205636262956`*^9}, {3.784320654528022*^9, 3.7843206808494368`*^9}, {
  3.7843209602681837`*^9, 3.7843209638742743`*^9}, {3.7843210508795223`*^9, 
  3.7843210655038986`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"54de07a1-53b4-4a1d-8188-4e66a6cde3f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "L", " ", "\[Beta]"}], "+", 
     RowBox[{"0.25`", " ", 
      RowBox[{"Coth", "[", 
       RowBox[{"L", " ", "\[Beta]"}], "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"L", " ", "\[Beta]"}], "]"}]}], "\[Equal]", 
  RowBox[{"0.25`", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"L", " ", "\[Beta]"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7838037266482267`*^9, 3.783803745108099*^9}, {
   3.783803794840114*^9, 3.783803814536952*^9}, {3.783804645435133*^9, 
   3.783804671514936*^9}, 3.7838047210487747`*^9, 3.7838644696103687`*^9, 
   3.783864708638933*^9, {3.783864738752203*^9, 3.783864777158662*^9}, {
   3.784320218846696*^9, 3.7843202562497177`*^9}, 3.784320331777918*^9, {
   3.7843203676271267`*^9, 3.7843203748395*^9}, {3.784320406176964*^9, 
   3.784320415882598*^9}, {3.7843204582268314`*^9, 3.7843204942709813`*^9}, 
   3.784320534993601*^9, {3.7843205650179367`*^9, 3.784320596271264*^9}, {
   3.784320676728438*^9, 3.784320682178088*^9}, {3.7843209667359295`*^9, 
   3.7843209762176123`*^9}, {3.7843210605786123`*^9, 3.784321075539745*^9}, 
   3.7843218741229877`*^9, 3.784323284911271*^9, 3.8190623327314067`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"efc6714f-07cb-403a-8f3e-a9f5cd5586bc"]
}, Open  ]],

Cell["Now, we define a new variable, z:", "Text",
 CellChangeTimes->{{3.7838648629117126`*^9, 3.783864873238125*^9}, {
  3.7843230292534447`*^9, 3.7843230298529515`*^9}, {3.7843232134280677`*^9, 
  3.784323217308283*^9}},ExpressionUUID->"0d9a1ad1-f4c4-48a9-8973-\
6a8a3cb94b55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"charEqz", "=", 
  RowBox[{"charEq", "/.", 
   RowBox[{"L", "\[Rule]", 
    FractionBox["z", "\[Beta]"]}]}]}]], "Input",
 CellChangeTimes->{{3.783803836169757*^9, 3.783803943856019*^9}, 
   3.783864803792315*^9, {3.783864877044518*^9, 3.783864885154387*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4c087b0b-ca68-4a41-8c9d-9f00038ddc60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1.`", " ", "z"}], "+", 
     RowBox[{"0.25`", " ", 
      RowBox[{"Coth", "[", "z", "]"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", "z", "]"}]}], "\[Equal]", 
  RowBox[{"0.25`", " ", 
   RowBox[{"Cos", "[", "z", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.7838038453423986`*^9, 3.7838039447029037`*^9}, {
   3.7838046454455357`*^9, 3.783804671525414*^9}, 3.783804721059614*^9, 
   3.78386480451223*^9, {3.783864877726862*^9, 3.783864885905066*^9}, 
   3.7843207484249315`*^9, 3.784320976375251*^9, {3.7843210606879797`*^9, 
   3.7843210756178484`*^9}, 3.7843218741854734`*^9, 3.78432328504276*^9, 
   3.8190623327623973`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"eb7387c1-0998-4491-b657-b378d7b635ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"charEqz", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.783803404230801*^9, 3.7838034673552303`*^9}, {
  3.783803955211686*^9, 3.783803993126801*^9}, {3.7838648120427103`*^9, 
  3.783864845751472*^9}, {3.783864890416934*^9, 3.783864896554817*^9}, {
  3.784320848852558*^9, 3.784320921124444*^9}, {3.78432099067807*^9, 
  3.7843209935066385`*^9}, {3.7843210795083237`*^9, 3.7843210821266365`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"44b3bf1e-2daa-445c-82f5-db8d431e8eab"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVmHk8lF8bxmdshYh5hrLNPChkJy2ynDuKLEVCJb8WKUsIpVKK0qoI2RVC
opSSFIlHZElZKktIWbOXfec9rz/4fMeZ89znuq/rPoO0w0mrYxw0Gu0E/vb/
nw8uOfBoON7Wp/3/a5+SXuk30nwv6YJoAYxwd64/+ktlhYEk6Yto0CvBwbUM
CYbnvuBruoJoveikRZcYekAFs7nJW4hGEwt+xSmPlP86hiw53UU0B6q6alYD
/RRMWJxvDMccNNPeqY3WpPFunJ2LRLRdwoa3ErYiNz0f9yl2LKIpjk4qcBqj
V99/p44b3ke0EWXvSvZONHvCvHXEKRHRwr9GaszuRkn01ltT2x+iANXsljOU
Ddr2JWztZGMyonnu7szq2I96Y4yLx11SUcCD3nuNhw+iO44L9mNzj1BAerrG
6QdH0Lc554h/7AwE11L8belO6Ew5S/3vyyeIeu1FrZt2QeL3vlcNGWYiqr5w
e5ekO3JQBM4BpyxEseZfLk15IY658zXjfi9QwD6dSqWaU+j7bxup8e0vERVo
udrwvQ86l8mfN9qYjWjM0wXr2nyRaXgPz2jSK0SrEZkdE/JDkueKrUdcchB5
JA8S7S4hyvDsv79zrxFVSRUbxV5Gy1o65IfYeSigy/iM9ux11ES99xnszUO/
swpkpj1uoidpMSUDL/NRbWOcv/jfW2iX965D/YYFiPZn7vsV4WAUxZsf9cep
CCWZy1nZ/A1DOWdNvU+tptDNY8aT8rgP9/s3iY35Uajioa9Rauk95FHLcBrd
Xow8a2osIl9EIsb9Co6Rxg8IXMfRps+xaE4wN8NTtwSRp+yyNrTHoa7LKZb/
kkqQM+fztm9z8SjX6VLCX5dSZNlyj6N/awKyW6+1ZXjuI0o31KSe3HyIHn5K
9BpgV6Lp8zI1fT/T0HjMa8VfdyrROCPpdmTqY2TkVNX5daYSMcfHggI80tEg
55RN/rdPSPe27duVK56gzXq7tty68RnZy9SHjrg/Q7VZ8xzyf2sQM6By6Pux
bMRAvAcFVGuRgcLCYnNHNtKRi9hyw7EWqcfLu5858gqFjGeMna+rRdd/X7ro
ejQHaYXVH3N4WociPnq91Tyfi/w/KZtqHPqGNEN+2kWN5qP0l2/knkZ+Q3LR
Yr+ibr5DX2MMONd+/oaE1gysI8kCtMZpX8Fq7e+IcaXrQeWe9+gT51VVGlGP
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

       "]]},
     Annotation[#, "Charting`Private`Tag$2782#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 9.999999795918367}, {-10, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.783803433972314*^9, 3.7838034689445753`*^9}, {
   3.783803970076606*^9, 3.7838039935314217`*^9}, {3.7838046455100183`*^9, 
   3.7838046715916567`*^9}, 3.783804721117131*^9, {3.783864832833639*^9, 
   3.78386484624265*^9}, 3.783864897042324*^9, 3.784320753353055*^9, {
   3.784320851759905*^9, 3.7843209214475064`*^9}, {3.784320976489413*^9, 
   3.784320995653842*^9}, {3.784321061016008*^9, 3.7843210824670243`*^9}, 
   3.7843218742791986`*^9, 3.784323285465819*^9, 3.8190623328843575`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d4d1db7b-890f-418f-8cf8-8158d669d48d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"roots", "=", 
  RowBox[{
   RowBox[{"FindRoot", "[", 
    RowBox[{"charEqz", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "9"}], "}"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7838040018418217`*^9, 3.783804057099147*^9}, {
  3.7838044710860977`*^9, 3.7838044735669823`*^9}, {3.783864902268277*^9, 
  3.783864911277309*^9}, {3.7843210115090528`*^9, 3.7843210323061233`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b1171906-3cc9-4fa6-885c-c0d3ba06dd70"],

Cell[BoxData[
 RowBox[{"z", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
   "3.213629536657891`", ",", "6.32121169228728`", ",", 
    "9.450544007825249`"}], "}"}]}]], "Output",
 CellChangeTimes->{
  3.783804057512534*^9, 3.7838044751415358`*^9, {3.783804645521747*^9, 
   3.783804671602544*^9}, 3.783804721130185*^9, {3.783864906061295*^9, 
   3.783864911637888*^9}, 3.784320757692933*^9, {3.784320998531141*^9, 
   3.784321032885867*^9}, 3.784321261703906*^9, 3.7843218743573055`*^9, 
   3.784323285566063*^9, 3.819062332915348*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"9bb86bea-50d0-4948-beb0-c8cf1043987e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]Rule", "=", 
  RowBox[{
   RowBox[{"\[Beta]", "\[Rule]", 
    FractionBox["z", "L"]}], "/.", "roots"}]}]], "Input",
 CellChangeTimes->{{3.783804449496621*^9, 3.7838044803067217`*^9}, {
   3.7838047042675962`*^9, 3.78380471351418*^9}, 3.783864921079473*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"bd3b2fa7-e57a-484d-b834-0cad3b279a13"],

Cell[BoxData[
 RowBox[{"\[Beta]", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["3.213629536657891`", "L"], ",", 
    FractionBox["6.32121169228728`", "L"], ",", 
    FractionBox["9.450544007825249`", "L"]}], "}"}]}]], "Output",
 CellChangeTimes->{
  3.783804480866253*^9, {3.7838046455541143`*^9, 3.7838046716319323`*^9}, 
   3.783804721165367*^9, 3.783864921909791*^9, 3.7843217548853416`*^9, 
   3.7843218744354134`*^9, 3.7843232856972218`*^9, 3.8190623329223456`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"deb15c4d-433d-4417-8a61-876dcb594b29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["z", "2"], 
    RowBox[{"Sqrt", "[", 
     FractionBox["m", "EI"], "]"}]}], "/.", "roots"}]}]], "Input",
 CellChangeTimes->{{3.783804096921743*^9, 3.7838041270931273`*^9}, {
   3.7838042113710318`*^9, 3.783804239682893*^9}, {3.783804485988806*^9, 
   3.7838044868185883`*^9}, 3.783864959821251*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"1000998f-5fd2-4cd8-85ac-af1629a83a46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"10.327414798880012`", " ", 
    SqrtBox[
     FractionBox["m", "EI"]]}], ",", 
   RowBox[{"39.957717258709415`", " ", 
    SqrtBox[
     FractionBox["m", "EI"]]}], ",", 
   RowBox[{"89.31278204384172`", " ", 
    SqrtBox[
     FractionBox["m", "EI"]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.783804115628449*^9, 3.7838041278122597`*^9}, {
   3.783804225726667*^9, 3.783804240209094*^9}, 3.7838044875415*^9, {
   3.7838046455641947`*^9, 3.783804671642551*^9}, 3.783804721177907*^9, 
   3.783864960515409*^9, 3.784321758780854*^9, 3.7843218745447645`*^9, 
   3.7843232858287086`*^9, 3.8190623329523363`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"302407aa-0f8d-4af8-adb0-db0ad33b18f2"]
}, Open  ]],

Cell["Now our modes have the form:", "Text",
 CellChangeTimes->{{3.783864998322115*^9, 
  3.783865007050572*^9}},ExpressionUUID->"85166ff7-2fbc-455e-8138-\
191c9690d7ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalPhi]", "[", "x_", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"sol", "/.", "C1Rule"}], "/.", "C2Rule"}], "/.", "C4Rule"}], "//",
    "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.78380433016707*^9, 3.783804366335585*^9}, {
  3.783804654517954*^9, 3.783804659169355*^9}, {3.7843217657291193`*^9, 
  3.784321779345049*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"2f697e20-5872-43f7-a63e-48f5d792fc73"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"3"},
   "C"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", " ", "\[Beta]"}], "]"}], "-", 
    RowBox[{
     RowBox[{"Csch", "[", 
      RowBox[{"L", " ", "\[Beta]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"L", " ", "\[Beta]"}], "]"}], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"x", " ", "\[Beta]"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7838043477298403`*^9, 3.783804370007791*^9}, 
   3.783804600733528*^9, {3.783804645862977*^9, 3.78380467193293*^9}, 
   3.7838047213089743`*^9, 3.7838650096952972`*^9, {3.78432177580381*^9, 
   3.7843217799539146`*^9}, 3.7843218746228704`*^9, 3.7843232859667034`*^9, 
   3.8190623329818306`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"548a396e-1c2f-4077-8372-e04b6bebe5ae"]
}, Open  ]],

Cell["\<\
If we plug in the characteristic values, we get all the modes we solved for:\
\>", "Text",
 CellChangeTimes->{{3.783865022048935*^9, 
  3.783865042161933*^9}},ExpressionUUID->"91d0afde-0d2b-4035-8188-\
32fc4b3c41e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modes", "=", 
  RowBox[{
   RowBox[{"\[CapitalPhi]", "[", "x", "]"}], "/.", "\[Beta]Rule"}]}]], "Input",\

 CellChangeTimes->{{3.783804576715361*^9, 3.7838045890147943`*^9}, {
  3.7838047290453978`*^9, 3.783804768606345*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"36bc8ff5-5728-4cff-bc27-ef561cbd6ec6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{"3"},
     "C"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3.213629536657891`", " ", "x"}], "L"], "]"}], "+", 
      RowBox[{"0.005797629033085135`", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         RowBox[{"3.213629536657891`", " ", "x"}], "L"], "]"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"3"},
     "C"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"6.32121169228728`", " ", "x"}], "L"], "]"}], "-", 
      RowBox[{"0.00013669241426178828`", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         RowBox[{"6.32121169228728`", " ", "x"}], "L"], "]"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"3"},
     "C"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"9.450544007825249`", " ", "x"}], "L"], "]"}], "+", 
      RowBox[{"4.052384311992564`*^-6", " ", 
       RowBox[{"Sinh", "[", 
        FractionBox[
         RowBox[{"9.450544007825249`", " ", "x"}], "L"], "]"}]}]}], ")"}]}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.783804572491416*^9, 3.783804589578285*^9}, 
   3.783804671953764*^9, {3.783804721319569*^9, 3.783804769245186*^9}, 
   3.783865044198586*^9, 3.7843217876196327`*^9, 3.7843218747009783`*^9, 
   3.784323286098197*^9, 3.8190623330118203`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"813a22f2-f611-44f9-bc32-db37bed52139"]
}, Open  ]],

Cell["We can normalize them using the norm as:", "Text",
 CellChangeTimes->{{3.7838650613100567`*^9, 
  3.783865077413052*^9}},ExpressionUUID->"43f00f52-d521-4388-bde6-\
7bdca4b9d1db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mags", "=", 
  SuperscriptBox[
   RowBox[{"Chop", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       SuperscriptBox["modes", "2"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "L"}], "}"}]}], "]"}], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}], "]"}], 
   RowBox[{
    RowBox[{"-", "1"}], "/", "2"}]]}]], "Input",
 CellChangeTimes->{{3.783804877245068*^9, 3.783804884291481*^9}, {
  3.783805018821097*^9, 3.783805025316042*^9}, {3.783805133978322*^9, 
  3.783805134342057*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"03cb25fc-cbec-4590-bb6e-0c33afc90f56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1.3998082380123553`", 
    SqrtBox[
     RowBox[{"L", " ", 
      SuperscriptBox[
       TemplateBox[{"3"},
        "C"], "2"]}]]], ",", 
   FractionBox["1.4101432640467237`", 
    SqrtBox[
     RowBox[{"L", " ", 
      SuperscriptBox[
       TemplateBox[{"3"},
        "C"], "2"]}]]], ",", 
   FractionBox["1.4123399456943269`", 
    SqrtBox[
     RowBox[{"L", " ", 
      SuperscriptBox[
       TemplateBox[{"3"},
        "C"], "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.783804894569681*^9, 3.783805034892982*^9, 
  3.78380514544855*^9, 3.783865089758369*^9, 3.784321794955329*^9, 
  3.78432187639892*^9, 3.784323288923519*^9, 3.8190623348152447`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"6cf26f5b-167f-47fa-9bab-57d0c7b37e33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NModes", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"modes", " ", "mags"}], "]"}], ",", 
    RowBox[{
     TemplateBox[{"3"},
      "C"], ">", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.783805052049473*^9, 3.7838050899447737`*^9}, {
  3.783805155322659*^9, 3.78380516901915*^9}, {3.7843218026909018`*^9, 
  3.7843218085162973`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4a7a78f3-66db-457e-8324-495edebc19cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1.3998082380123553`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"3.213629536657891`", " ", "x"}], "L"], "]"}], "+", 
       RowBox[{"0.005797629033085135`", " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{"3.213629536657891`", " ", "x"}], "L"], "]"}]}]}], ")"}]}], 
    
    SqrtBox["L"]], ",", 
   FractionBox[
    RowBox[{"1.4101432640467237`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"6.32121169228728`", " ", "x"}], "L"], "]"}], "-", 
       RowBox[{"0.00013669241426178828`", " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{"6.32121169228728`", " ", "x"}], "L"], "]"}]}]}], ")"}]}], 
    SqrtBox["L"]], ",", 
   FractionBox[
    RowBox[{"1.4123399456943269`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"9.450544007825249`", " ", "x"}], "L"], "]"}], "+", 
       RowBox[{"4.052384311992564`*^-6", " ", 
        RowBox[{"Sinh", "[", 
         FractionBox[
          RowBox[{"9.450544007825249`", " ", "x"}], "L"], "]"}]}]}], ")"}]}], 
    
    SqrtBox["L"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.783805070252*^9, 3.78380509035128*^9}, {
   3.78380514550327*^9, 3.783805169585052*^9}, 3.783865091994095*^9, 
   3.784321809333315*^9, 3.784321876586378*^9, 3.784323289329588*^9, 
   3.819062334918716*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"ef9f3683-b117-4f17-95a5-b50f93a7c794"]
}, Open  ]],

Cell["Now, we can plot all of them:", "Text",
 CellChangeTimes->{{3.783865110128902*^9, 
  3.783865119082988*^9}},ExpressionUUID->"34df8bf4-2805-47c1-bd50-\
71760e87cb72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"NModes", "/.", 
     RowBox[{"L", "\[Rule]", "1"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "\[Omega]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7838050925090303`*^9, 3.783805114849991*^9}, {
  3.783805184159012*^9, 3.783805232298832*^9}, {3.7838655679712477`*^9, 
  3.7838655707977552`*^9}, {3.783865635755294*^9, 3.783865669430105*^9}, {
  3.783865719855633*^9, 3.783865721698885*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"7205b9dc-8e31-4a25-99d1-095651912f75"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
d33nEgpUmEuDPrGhn2r/2DIKAYmRTaeIN7nJP5dcRSH7w2U7d2LJi0OrtNQo
jDib6hYTT5xo79qrSWGSZe3ZSNx9sO7pSW0KG0dWHPxF3Li35IyTLkV63stC
4Rckf/XTVQJ2UngjLpAhT5ytFfEjwZgC55GE6gbi2H89kl6bUWgQ42zXJ/Zd
bn+i2pKCaM+NNgvi6/JHlnKsKIQ2NUqfIT5uomrBOEZh7xmbwKvEe+4J+jae
pmBkKPjUjXhz7tfir7YU7MzKbAKIVboSf9dcJt8/lvgyglhq0VXlj1cpWDok
Jz8mHt+z42D5TRKvyBqNVOJOV1n/Ny4UhAUWnskkbsjpLC1wp6DY9kAth7j0
Z/7gKx8yXuS/8a+J0xfcX5EdQOFR0GRqPnGYsZXVs2AS373jpgXEbnfXPkiJ
oJBptzZi6vnFlxPvEmIoHIwMcp76/cGOz0MxCRR48esnXxLryT1e/SiFgtYR
YYWp8VWN7I+EPKPwqWoR9ZR4kYtucGA2hQ6e/Zap+Qu/kP7gm0sh7Lf4pqn1
DbT/GPEopBAn0l/nT8ySfb3OtZSCl7ec6FR8qnZ7H3euIPv9LYjtSPzq9sGw
61UUci9am58mjs9aVWX/mUJhp/PZqfj7tY2OX2igsIg3KDe1Pzf+qfn3XDMF
Sb2P56b278Su2FMnWRQelo5bLp6Kf+a2mkOdFCpnhM8ZIOdBhSspaNFHYenA
9ObmqfMk06ZmOkD2w5izrZS486ZHtMEYBf+HEz3eU+fJYvXZxwJsrN5vsN6W
+OivedOWTGejYJOUpNHUeVX6sXHBLDYo6e1ZIsSlRTWfw0XZ6I3KuNBBzru6
Re45mdlsfDuR/fEt8VIfr5i5Umxs+exr7TiVH0svawRIsyGVZxtqSCxRdKBO
TJaN63a0rSLxcP/KGcKL2EgrWsyvJPn2ZX+13bgyGyqhFjeEiXf058y8tYKN
lG8KyfUkf4u8YuL/rmJDd3OZfSxxSsHFhj/r2Rj8lNC5nviOguSWbk02WgJ8
DXRIvRjMH/52ZgsbH2qL7KYTn9/HvfRDm40BzWHVd6TemHu+TGTrsrGvIj1M
e6oe9ZqLNRqzET6nsHEZqVd5+43e+Jqw8amyI76B1DfdYh0H7X1s2N3lVbkR
HwpY3/rkABtvLUq2t5B66KMqku54go3ZjqcKrz6lIf1o0mbFabK++X5+84nj
BWkpxlk2lCqoknxSb/O+cm/qXmSDGbjJYIjU4w7Hot1STmzk6VE/bZ6Q/sd8
MVFxi42dSdHvBkl9H9dPfeF0hw3v3ywBH2Jp2bAFnHtsbIxRiH9G+oFu/qXu
zAA2yiTb7NmPyXjjS32Nk9ioMFjqOEL6zZrTctqCKWyECjAuXCN+XTtnICeV
Dcfp3I+/SH+qjRs7uCiTDQcRkVQ26V/j27+v7MlnQ5OrN+P5I7JeT5+P3p/Z
4Eh3bf8bQvrFnF+zykfYWPpjdONBXxpfi329do2T+agNdDwn/TfITnnm50k2
JOz2/DvVj6WqDk1vEeIgTfdKUCLp11IeFeM8CQ4GXAe8Gt1pzB2NHFioxIGT
S6nR2B0a4j/1GQ6GHIjtNknVtCf9IJR9aNiYg9bLGknHrpB80bvVfMeEg6sy
1zd7X6YhlpD13cecg6DDepp1F2mIWi+sizvCQXjsqKsZuZ/Mqv9V8cmBg8n7
JnulyP1F6E1UplI0B+Y2Mw957afRskVvJxXLgemY8oTdPhqZBb3syMccxKhJ
TDM1I+vP3SollcKBX0nsSmkTUl+fU44CLzhgWgaPeBqSeh+ttJn5gYNHnTUF
i3XI/jqll4f94UBNXt9Bdh2NgKF91mY0BzK+Z/Q+riH5fHWMP3uYvJcElt1w
Wk3y44rxco8JDsIaI8S+raBx6izPx0GEiz/uoswbSiRelv/tNVnChc5m/10O
82nYqhU2ixhyIWg5rqQmSPLzy7dnecZcjH9wfJI/yYfMhV8uZ0y4MPCjordO
8PHmibJKhTkXpwwl+reN8jFP9oH93aNcrPloKr+Rz0fh8EmxoatcrFzX+qm+
kw+xNxJb2+O5eGBiZdZTy0f6ruPxJTR5rjaa5RvGh9oaRW0MczHbuK+mNoSP
Egl265tRLg7MeBslGUzu3/XWsm8F2qB6wm93cCAfg9YHA96JtmGexL9/Pb35
0LY3ca5c3IbtS3sz15P3hS+R2ge+7mhD34jTdS8rPvg9C+Z2hLVB9NgmjqU8
eV/ZZzA9RK8dvfrb7zLcBuGy0yMup6Md1s7t5i+Yf6DI3N2U6PEDFULJPcwV
f7BZwz1EbkMHZKozTlmbDMBq8edhwfoODB0Om6Pj+Bv8Kn/uZdefWJX6+6+o
wy9ECNk4mi3rRP/zlSXCP/oxj/UqYVp5J/gSzPUJdb2Ycdt1v+aVLtIvDZ0W
OHZDINUmkyvVjUvR0mu3qnTCPjLTX6qsGwkTM/+sDPyB4tXesyQv9iC4+tVx
fR4Xkrvt17hJ9CJ0T+vJr3ZsMNZ+qXcq6oWbdariT6NWZMViWbtNHwQzgz/+
Ff0O60x1SfmJPqSm/FVUb/yCux6PXRlp/egOs42utHiP553yURJGPCSXvde+
4/Ya3jEeR1l7eFBXiH62ZNlrnDTrU84w5WFYQWL+u4pcLCoqyjK25EEgTFN0
rkgufAMPv/c7zsP8WXVG7wJzcFb90W9RJx70Nvg0hMVkY6m79E7hZB7o3n2u
VtdSMLHJeXbjUx7+Sg+qbCtIRnNf29fkdB60lK14Kyee4IHlS+sd2Tycz3Bb
O9czCZOrzBw8ingIqlquszLsMRh1gbHT63n4U7K/SvNSOPI8h07Uf+OhO+d9
5LehUIRoHVmZ2MSDqkZzk8vdEBg+WZejw+LB7173coGghyi4UfPRtYuHQNkl
WWdsvRC2dmOgaS8PYzrPXvvfdscVbvR+RR4Py1vSyr4GumKFkR1VOsjDe8P1
/VfPXYeQYEPSgyEeUhKWmxcHXAH7ldb5oyM8tCpd/e5z9gyKzieuVx3nQeVh
c5faWUuELxHjT07y0FM+z62r+pr2//758DE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6813#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
CY/3S/rhiaDo6v8Blzr8zQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6813#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k8lN8Xxy0VX0oRCikUaUMbkXyyhCxFkqWoaBFSIaksJTvRIqVFoZRS
lpQWPJaxk6WymxmEMYOxzDwtWn7P7x9e79fce84953zOPfdRdju156iQgICA
LvXn//8tjrJaSkfsDeZPzZpXbHbDYJax/GmG3Cas1r2YX0Y7jY0P79x/LWeC
nefMIu7QLsGysT3/gdxetGZ/rvKjXYPDke/FN+SOQCnvW40S7RF6NaOMr8r5
4/NOXhuvPBePZHZHxsqF48B6jRj7klJcFn29MkYuCSv6nk0Ov2iGo1NazsTk
YwjXlP04IdYH8X+XD5gtzcHm6x9erExg4c4JB9e1pjkYev8tU/I5Cyu+rD0k
6ZODG5mmRuOVLBhktbt3F+eAl2yhGPqHhfdZyW8KNXJxVUae+OM1gjG70SLL
T7koT/R4dNiUDftnt+v95uVj2aPvvQcmOFC1HWdVxBUg6ktpmrAsF/KhZnrH
0wpgKJa0W0OLiwUvH8WJFRZgdYPwoh0WXPwStdOw7S+A2qhmrnYIF82lhX70
LW+wVrZaX32Qiwtal//+GHyDLufOLfccJvBpvrS0xvZClFhX1VbLTaJi28mj
LfaFkGQELE5UncQ7r6q3/l6FSNF3DrBcP4mM6kCnj8mFaIhvMMwwn0RgaG+q
+Vghsjp9zD4FTEKFm7nK/e47fExzeSLeMolzn3Rxh/ceK+U4/ZNBU5DQeDNY
K/oB9s+/Jd6PnMLjq1rxM0s+YOq69qT+tSm0WK3sdN3xAfU/wj66ZkxhTb20
n2ryB6iwD3Sp1k6BUc3NzNf5iKJfwnnFUtMwK3si0XihCCbLSvwnHkyDrqT8
5m9CES4OTBFmmdPwv3R/v1ZGEaLl05clvZpGGm4+u1lfBMHHwmJziWnMFF8y
cl5SDO7pDeKBjGnkfNgfMFxcjONWu9r0l/KwqECSLihIwD/wSPz+mzwciJ/Z
+02WgGiAxpa+uzykHxmsr1pLYFuK4hmndB7Wyrx/H+dIIIY+HaCcx4NRwKFb
MrkEevRWWc3/xIP2fYfMJM1SSNEERFxn8+EU3dAXoVcKxYpju8Xm8hHkb6h4
bkcplK7Ldj+T4qPMak2S0/5SpD+TflG0jA+rP38vL40qhV9Y7VsDXT4Ou2a6
PKOXovZe5rdnJ/gIt1BISRkpRfn7KZ9zp/jI1L72JZZXCotNj2d0zvIxKnHB
8qRYGYzn689LvMRHAGGtu0G7DD2hh58nJfMRr8SXLrpahl/M169/EXy8mutp
8/JOGU5MD7wZpvHR8oMel5pRht3r3oZV1fIh21IjdPl9GbRO3zzl9JmPtMv3
J3YMliGn5zy+DPLxtt+4oUm/HG9VGpQUREm0mV+evGpWjmTPzLwFc0mQr0pk
rfaUw8zkq/uP+SR0LuoerjlejiLuUZXURSTeLdQkS2+UI9U8r9JIjUTHeW+F
0AflWKJtu7R2FYkfjKzt256VQ+nWzQjDdSS2ZK+Ie19cjhNzrM+JbiLx3kRe
KZ9VjgcK97PHt5Poeu6w4/Q0Zf++AmabkPi14Janxt9yjNUVNc0zI6HXO//N
84UVuCRSP8CzIvHh7GyLDIMKiE1+yZB3pPZ3G506vLMC+1T6p0udqf2Gl5KW
7a1AshZto5MLia0SM/R7JyqgeiI66KAbiaLMCb+kpArIfombU+FFomeuRsqe
hxU4lBCU9eMkid++XiULnlfgYcwaLaXTJLZhSPQqUQHO+cMDJv4kXJ8s17Cs
q8A7A+t5RgEkQsQP2/33tQLpg6Uy6wNJlLR3P4hgV+DVNq/ibxdJ0LfJVRjz
K0D2WDtnBZP4m7GPJShAg4z+gpaDoSQMTrdsCJGhwX1mzCw9jAQhWl0dsJ2G
k/HSCI4mwfSZNbbJkoaDY8UJzTEkBL4aSk3b07Bvc3quTByJ7WlFB0550ZDg
O3X87FUSh0R+XV4XQEP0BuZMYgKJSyd1nnIu0TB6au7B+4kkSnXzJ48n0yCx
KvJa7HXK/kOurFoaDT1d9128b1D256zT//aChh8B4d9xk4SSt+fh9Lc0KIwV
usxOImHY+jTyUBkNFks+JhZR7LZl8MXSBhqWfpa/evQWibBUlZaeNhqkm73t
BZJJpM86RN7to6GhbDcrnuJyzwcKTqM07DDz2iF+m8TrES8vV5IGB4Guvf4U
P/bQ++guUInXaxLntFCcNCwqfkKsEgKLHZ2V75CIONbu7CNdCVaHqM1RigMG
nzz3W1oJDbOg4fsUHzvi/ytQvRLVAklKNRQ7DBhZhGyg1ntsmRmi2NxN8u4V
/UpIP3M895Ni3T7GSLRpJVSy2Un/KF596JVugk0lLNQ5dv//XYERFHPTuRLK
t1wK/r9/rqtl550jlUjSsnpbTfGfHrlVqT6V4Pypdvq///H9rMCMwEoUVbJS
j1BM73pb8yysEp0yjRFKFDc5RSx+FV8Jc8O7Es1UfKUddh6vkyspv0G6fhTn
Oqi8e/eoEg93Z84RozitbUKk5DmVjzzbgCQqfzfsCYeKgkpsGSuJlqL4yper
T2tKKvFk3WaDcCr//nYHvjfWVGLcTej2CFWffbY/kzt6KrHfcGZjIlVPs+bq
od6hSux8+C2wiar3lt3J2gMTlTDe/8hNmGI5641tY7OqoEzsVTO9RkKsQVBt
WqIKbTqGgvaUfn5ZNJ/9sbgKBTnDYQ6UvnrMT8oIr6tC7r2kIJ14Eo3VW4+K
6lRhF4/Gl6b0WWIq9maeYRX8pYUXD1H6fWjydO9i+yowKkyd3aNIXKs4+1jx
YBVWGGZfnB9J6dXIhKdyogobDzPMc8IpfW3vu7kuuAoiT96N1F4mYUfkDGyI
qoJRAa/E5BIJE4OQjVuuV8Fef7Xx6xASqvoKn42eVOHuh+/7vaj+Y+nYSzk2
VuEVs4llRvVv59vlbi7tVZCe2r/7kC+Jus1TeW59VZDJDPL2pvr9xcZE25P8
Knh41X466E3CR7P2WphiNU4Lr7R77U6Cr7Zt/suT1fi94dVJCRuqf/uNqmMD
q+EyNHFd3ZpE5APzUI8r1dBa9GL/JgsSstJ7uctTqvFo/+phJep+0xb0arpL
q8actR0yu3RIBHbfSYxWqMHtMzuzf8lTekhONTumVoMmTRclLeq+Fd3z+J/x
+hr022UecFhIIqUm59Q/0xp8SqzVuShO3YdvqnYH+NaAxWERi2f4+J3Im3+k
tgbf25f6vmznw8TyV7XhlxoElKdnClDzIH6OwKVljBpswvamHZ/4UAwWn+ji
1eBPxl/RTGqeGHiqNNsq1aLlvGBASS4foSY213CuFvqunvP3RPIh9PPFAgXV
OiRo9zOWrORDodFoGpp1OGK7MU5FmY9NaZ1fj+jWYSTY/cASBT6O7hS598q6
DjtMR4NHJfioSXFTNQqog8yzPsV/fB4S9eT0TlTXQUNuychEGQ9LgiLdC0/U
Q2aHfoWSLQ+bbRRNe/zq4Z2qr52/k4ddKwrUBUPq8Tv3u9kWIx5CG/rGLG7U
I2+Jl6PKRh76l2wLpH+ox0GYPfaR5iGreDp+9twG5DY9LOB8mYb2v0Nv7V41
IEMu9fht62lYWZeG7XjXANbeNZ8nTabhfm/Zbp3yBhjVRXQb6k/jmg59WL6t
Ad3f3b+Wr57GyKn9cv1/GvBz1HzKXGQa95n2QaetG1G2dI6IZ8kUBMstjK6O
NuKsb4WPiuoUGsI3fapa3YTKsNnOSV8noDe/Xuj65iZsXz/rcXztBJ6lHNbZ
v70JwX5VpheKJ3DlVcIjrn0TCL7hm81PqPUdLN/Fl5tgamwsoeFPrV/zYJFn
exPajhZHrVkwAaORsNw5Rs24cq187/LL41h2jfMza7wZTiEHS4n/OOB8Z9C/
arWCHHaSTe8bwGP2xzqJhM/YtN6U1VrYBgnFp9xv377grGYZ3c+pAPEn3hx7
tKINX0eUl59eXE2Q21988whtx1DwNsslyr2E/wZagWxFBzi9e9g3tg8RxzYp
Pbpe04FVfh0PDx4aIhy1g+LmfuqA+Lef2YqXhoitepvchDo7oD84ceEkMUQI
GT2ePz7egT0xU2lO24aJRNtwz0r5Tgj2lS7do80inp82UfL37QRzadbfzUvY
BOMVLa5FuQtWtOO6Ia/HiOaxWaMbVnZBLJ/1+MqnMaJ07Q6rpLVd+JgVahAw
MkY8el4510GnC63UwFJZNk64ZVZd7bHqwrVYW3ZyzDgx9KAmcfhcF07ttcjq
deYSY/ENN/80diH0lt7vLecmCHr9XJ7r5y4s42omhFyZID6JWe8t7ehCwfnh
/PeJE8Sr6EbpKwOUvRji1oJnE8Tp8E+3RH92YZfAOTY6JgjexebbC1d04/Ev
kfWp2pPEjOeXe6sudKPiss9DVc4ksVfb5bpGaDeyJecK7eVPEtmCQ5Ebw7tR
aLc/MvDfJOF65/uZbQnd+B1e05uxcIooq5Q3t03vhvZ15XVXtk4RUUqHeYF1
3YjTYMccjJkiFraNWdXI90AnSXe7p+I04Z0WYNS4rAeaj7XO7VGbJmje/3Ra
V/Tg5wo9dS3NaSJAWHJ5j0YPlA/NHazfPk10am36yTXqQV9XllG4+zTxMO7C
k0VePWj3bfTgZU4TawxF/h772IOrXx188lV5RO7zFys7Snsg755sNbCOR2yS
trHdWdUDO6dPyiLaPEJ/+M7jNS096Pysfn+lKY/YdXW15cRQD57OsUf9UR7h
22l957xUL/7o1bTcSecRpNFUGXtRL5618D+QWTziYnYyZ79iL16Lcy3M8nhE
eCjDwEC9Fy9CjliVEjwiWfXMoJBBL2TbltlJ9vCI92eSNsSf6MXz6LMX1kjx
CYPuLQf++PQCrlLZeYv5RLlJb4SPfy+0H7D1Vy/jE3WL1DptQnuxx/me19Qa
PtFTXBgqc6sXzkXzYukmfEJArLshtbQXWpGlNir+fMIsXfl43iI6Pi1OnG1Q
wyc23ZFQq1pCR71BeGlhA59QSpj51qVMh6QBbZNqC5/4df6r26y1dByU1EJ3
J594aRvj6rCdDvalmNuv2XxioeCk/R8POiaOpFguFCMJge+90lI+dMyKZoVU
zyOJ0dG6z2p+dGTf+GJ6SpIkqjoe29oE06H2yjI+ZTFJnM91tM64TscP0Xdv
HNVIgnGw1GTnBzpsbO91hoIkGuxfCrsSdLyOLfDxNiKJd5Z3y31pdCyNfH/B
agdJ3NDx337/Ex2ihQsmhyxIYsd8dX1uPx2mi3asibAniQ2zZWaEWXTMKPRY
znMkiaUzgh8Wj9ERfGF1e7QzSfwY6tYx+k7HmXNO6s4HSeJFSeLGW+IMNL0K
SzzqQRJ3CoKmshYw0LhRlRntSRLhz0/klcgw4N00//pDb5JwTTbWZC1jYF74
3PlPT5OEpM/31Vs3MSASd+DA0kCS+Ov+bWS3LgPphVWJPedJgu3U8uyIAQN3
7ZrlEy6SBG3HC7UEcwYulfM21oeQxDnFgyp9Bxhonjzr9DKcJNxstPb1HGbg
Zv7O2H8RJLHrimBs+zEGekzVY3dEkYTaSMZk42kGrq0w42XHkITUkrOqtWcZ
0I3e4vIpliT+7DJ1ol1gIIWXfGMgjiS+FLBKP4QzcD9nx6GRqyRROvye9yaG
gTv9F793JlDxy8ep5yUwcH2Y7ViSSBLJ1gcOZN9kwHKDbHjyNZIIu7Tu2tM7
DKAlKtDtOkn4vP5bkf6AAfrJ5s0qN0jCaajp+4N0Bhqsoj5+pVjLyvdgUjYD
/mPFSxcnkcSSUOObiXkMHDC6OpNJsUi+dHXsWwasBTwfrrpFElPfBn9FfGRg
PGCu2COK6YsKNS6XMqB5Y+NWsWSSqLOIdguqZOBc1+MNHhS/CXZKPlfHwDv/
tRPvKX6Uu7rOt4nKh8oDv38Uxw/M/Dn5hQE3o+aiLbdJIlC2cf2JTgaONz2p
P0qx+87Uo0foDJQdnvUokuJdQadSDg4wEKHRqXuPYr2c7Y3OLKr+IotTMihW
65cU3DfGQP6Bj8UPKZaUGdhkO8WAoy7taSLFv80KPKy+M8Ay1XOg3r8E60LE
fbPfDCTUr2mwoJi9b41HmgATPs9fzpGl+NDEQqFlwkzcde+e85U6b1vM73v3
ZzMxS7q9IYpiy+WDm+VFmTh2ttZRg+LSosam22JMrKf3Pa+h8qO97+0JmXlM
nDLcV7GP4mxuqvDN+Uw81XBP76DyqxIT9WCBFBMfWyzNd1F8R+W0ToI0E7Qp
pzeFN0lCosixRXwREyP83hFpisPtDb1i5JjQ6tYYOkrV7+f4qtkiS5iwN3j+
/Pn/6x0t9TB8KRPX9xXoDFB6+KY8s0VImQl3svDqfIqb9zZ4/1Flol0xMNmY
0pPpeMGci+qUP5s1FpaU3oqiHjz6sZqJfYcra0zjSeLpB58v05pMzEh+U5ej
9Lpkr4PPmQ1MGK9LEp+Ipvp7DKLcTUz8Uwj7+IHSe4iSpD5bl4mk328j1lD9
wHv/8+txfSZcNV3TWq6QhKdd/6lBAyaIt8JXvcJIwj7ydQbTmInj1XvaL4SS
xNpRe/F2aya6pnJ3iVD9+G6vFRFrw4Rpx8xn1XMkYVxs5Gdgx8TZOuf/tM+S
hHOCZvcTRyZkPpvGrDlDEjFa/73wd2eidYWfkBd1P0in/HNVP0bFv+/D2kXH
KP0JklI9HlR9lYck37hT9lv7Lxj7UPaDBRZWuZLEkH+RhdR5JnqMmpZs20sS
vr35fysvUvV+EGtxzpbq1x1Z+edDmLCz3b49Yxdlf1GyfN8VJlRpLbHN5tT5
3p9i5yQw4Tkl0nJJn/L3RyXW+jETw8o6A7rKVHzH5AwEnzKx5caHi9cVSaLw
0/ypgiwmBkpX/+mSI4lPD387Lclh4r9Cc5qxFOXPsG0V5z0TtZIFT72FqHgj
Y2qjm6j8HXETWsrkE0PjocH6rUysbtZyvNXNJ844BKyf+MIEvL6W/m3jE9Hq
7ikOXUxoDu5pe9rIJ97W6Z9QG2SieQ/7qN0Haj7MnxCl/WLCaVlXq9R1PtFa
HBu18w+lj8+a0f/F84kb3qpzmv4xceh9vTkvkk9I1TkLd83qQ5qK4vcnQRRH
VP7hSvTBeGGs44XjfGLBzN0pheV9WNFgWT2ixyfmDu/o8bPsA1//mO/PDh7R
cIvp/NO6D1GnJa6ca+UR8SYXO0Ns+lDPyZ/NrucR4um5bTH2fbAOO38qu4RH
iLkotDw8SPlzUNJ/msEjRD9PVNb79UFUo1Ek0ItHzCLu5Sy/34eWpY+Xp09N
E136JuaM1D48Hwk/J86eJnI+jDLvpvWh7vRQ0/G+acL57TYpqad92H3r5eOf
TdNE3kuGv0B+H9zGc4PDsqcJ1/vL9Xqr+5AQtWaWBvU+eXf+BS15ug8ugk/q
ZKunCK9NHzv/s+xHkcKowAPPSaK0+Wv2O+t+pL+S8dY8OEnInJwIPW7TD4E6
gdG3dpME8URVrdK+H3Vbh0yf6E8SCxdd8710iNrP4m8UkJgkPv48Iv79bD8U
6Nec3ryaIMQJiW3fHvUjfovxjoxmLvFip9ujEpJaHxziphA0SvA58guGkgfw
wiJyzYGrg8QbOzPhJJNv+Gi4wG7Mq4sINY94WDD0DT6ffy2QKK0glHstOjIi
BrE8b63okvIP0NMJT5LbMAQ+Xeh1zLEOHFja9FPw8xC6rObztMW+gV93tf/0
5WHI4/cdlHPQI/7V4/eVYYhbDxSp9XJQbrWEGxU5jDW2cQZ/v3Nw7dPzmdS4
YbhsbV0asm4Uq1urpRtvDWOvtWIOcXsUrp2CZqueD2PntrPi206MoWr47Iu+
1mFo6mte+vBvHHdmufrvWcFCzlIR/faZCfx1X7S5RY0FsWakDc6ZxJGKZv7u
VSzYv4puZ0tOQivM+Jy1BgsKrokPO1dOouaf+gXzLSzEzff8YWY3ie+/pkMN
rFgQ/9H8xu3ZJPZNxsSt9mchfZ9FvoflFIpsjK2yAliQ9Q1VMLWfgkru77nq
51n4cqE4Te7gFMZ9TiWohrDw4dHmiXTfKUSM7r2uFM3C7N2nhAxSplAwvOy2
7H0WCneUBF7/NoWF9DfpQjQWYkX6CmL9ppEwNzi4sIqFx0e3v+0OmobYVhNH
71oWSgpYzkqR0xC60zqv7RML1XPeBITfmcaULTcwq5OF3jeH9xUWTaO5Un23
DZeF/XYJZeVCPMS/vDfzQH4EK6POWltE8CDa49a2R3EEB796/p11lYdwsdV5
IkojyJRa+TQ/iYeLx98dO6M6gnfWLxuGMnjwVP7aYqI1gieRbf151Peu+S2J
Z5wdI7BID9do+sXD7ODLe3XPjKCs8neKiDsfBZOjPwm/EXCL8o/nefBx5Jjj
Q9OAERDNh9x3+/BB263Jtrs4gu5nvh3Hz/MRrtIb6hMxgvK0kKNiiXzMqtny
IiNlBCFu6ZcXvqPs6T+2WX1/BLuPF3z6W0TZy5tP5qaO4Hz4TwV6GWXv7tD2
kowRuLskZwfW83HlZFJbx8sRhMUMuijSqe//hROCEuWU/x+Hv6oIksiP2v80
iTYCqaXd361mk3D7XWWlUE35uxg87fkfifLBB7fVG0awd9OJk2GSJMLeWa4z
bhtBomes5jJlEoKuTx0D2SMoJduVJAxI5LZK/f07OgL2GZVuf0MSh8xCMiK4
1PkaXHY1mZAo1bIfv8EbgVFcjONBSxKXhIXDX/4dgctVj3qOAwmBLNecfik2
SmwTiAIfElWj7T4PZdi4vTZKPOEMiXgtW40Di9lYzU/75OhPYtE745dfFdmw
8PZ4XX6ehEa1+osadTai5lyqHb5CgieW7hmxho33tvGPrCJJfNilsNpIgw2a
s1h/ejSJHW3zsj5uZMN89YfU5VdJHBicynxlwEZ/SErn2VskVFZ5H/MyZIO+
Mo1OvZ/A8h5UVTdhw0W41dgshYQfr/1x2k42yvWMVtPvk9iyxfaIqxW1fq17
1s1UEn8v1i1X2M3G+dDT4XqPSMQKF6cn7WVDJS/Y4kAGCRszbTdbBzYafbI3
tj8mIRuXoyzhzEa4pepZ40wS6VLpj6IOsvHjYvEf7jMSHvsUDpm4sbFkrpOx
1nMq3rtJywSPsoHNOvTDL0i8V45KveDJRoXhUsmUlyRCjgq46pxkI7Vl4mnq
KxImWecVeafYcNybcv1WDgmxsameXF82ZNqTGoNzSTRred8/eZYNm0We+x3y
SCT7D+5fHciG/pUsPZV8Kj/vXBWGL1D+9cY86RSr/G7vyghmI2NuJyfuNZUf
2N49dIk6T7B88eoCEq+u1DkpXmHjSKkH/QPF/tXGcl0RbDQVhe/Wf0NCT7y4
IzmaOq+47oIciv/t0r5jF8eG6U8npYVvSdBu5DgsSKA4vDLUg+LYNvVFjdfY
+OLqrpFDsY18elvMTTZ0x1esHaZY1lUh2TSZjWWWs88vKCTRk5ZkL5xCnc/w
P5k1FKcPzpMpvcfGCVsI6FDssSrqS1AqG09eEnqbKF53UiBJN42NlduyaSoU
T+WetyMzqHzc1UoVovgdb0rqdSYbCxaGVX+m/IVs8W49lcVG+zPG9mSKTYIG
r6/NZiNywQ0xC4rFSl1tR16xYZnPWcGl4msW7liQmcdGbJb5tQiKk81sm90K
2HhJk7CeR/H+uLrEZYVsCEW83B9J5UupyXh3z3s2gpamFk1Q+R2SKpZIKWLj
8jn301YU+97NuSpVzsbZoGet7VS9Cn/fjSqnUfo0YJ8Sp/i3a+Rl32o2zIpE
2VpUfaOWu5xtbWAjnxl7zpbSQ0OE+amwJjZehB2It6L0IsXaeGJDKxvMtqFL
utkk7meLudxoZ2N+7JG5I1kk+iTIfUZdbBgw5z15QelR7UyfzVQPGxpt3UqH
nlL9v/mdyZ5+NozPF1SmUnquLDm6VmqMjTTad6Yv1Q9iyrZq5Vw2dKzVcmhU
v9hc0VfynWJj/0eBE6L3SHSZLZRu/c4GEfL08f/7bby5dOa6EAcpxtqHziWS
2Lgxm284mwP1qr85jlS/Bt66zZ0U4WD06RZyTRwJYWefAdt5HJh5z/N+RvX7
4gGFesnFHJwciVn1M4iEyw6RyjJ5an/2mKPnBUoPT6dKzihyQE7T4hrPkVjr
XZvfosJBFO2HkKcvCUN+wN3r66j15je9Zo6RiHRwSzLU4oB715f9253K33vr
hMkNHKgdEQqaOERiX8iKMNstHPg3XWC8dCbhKdJ6QtKYA45+wcBlaxI5J4rd
y3ZwkKBfslHagrqf6p+5nDHnQEh7/OkdUxKh10JtW6w5yF68fE4gSCTJrdO9
7sjBw33hvde0SBSviRaV9OEgfZnmhnULSGh/WdR44zQHep16KuvmUvkPenpd
2o+yt/+3mrIoFV9jlfziQCqehlmBg//4iD41e92yMA6mPZwvMsb52PM6zHZd
Mgd/0nS079XxUb9fSjbnDgfGJbNTeiv5MJmV3qV1j4NS8UW60tR80bEvc9/0
iIODfnP1XQv5WPL939mtzzk48W7i3tEMPob1gu/uLOEgT+3ULhNqnh0amHuw
vpR61zwQotf78dEVd3+5dQUHQ9KTnWbU/Gvo+ZhtU8NB2oOo5YrUvMwP+VXi
0MrBiosPHbZZ8RFUfm7g6BAHVV8y1R2W8CFp4bs2TGIUswJrB0ULeHhUNl9c
T3IUxmeOuyRm86Cl+3JkcuEohixdSkSf8LBLnZV5WG4UdRKXbb7c4iF2jquy
4YpRao53mzQF8DCrYqesgN4odI64CTtp80BuVRYIOToK7Vnr0f9iGhGvS+ib
PUZRUO61szl9GtJrDhSPeY5CcChlPC9lGhvlb19wOT0Kj0ZNFZuoaZz+MZev
f5Gyb/qk68fhaYwU/BiZuTaKBo6NhKDMNHrWNX8+XzSKP4+CF8hT76GHHMlg
YWIUt+YljG/1mIJblp3a1bJR0E/VvrFzncLIivbAR1WjKL1VK3vUYgqkAl2x
unkUKjSfyvkqU5AUGz0uPTiKZlWl3zFNkzAdEvn9at4YNILUNPWXTyI3FSu+
uY6hjtvv99OFC5ccbUnFv2NoiOQYZHNYuBSRdrnn+TgGFmnzhP/rw0uW4j0J
Ky5kM24svqHfiugHEYfou7g4XhL4y5rXgiN7xlRf2XJhGO4rJ5DdgiVFRbnW
DlykFFTTzRRaEJu4vyrejQvn9dl+bVNN8NBOmRQ7z8Vw0k6ai0c9VMKlzUUy
uSgU0GGutyjH3y1B89qfcVF6fOyJ8LsydI4NtGa+4EKrV1i4SbUM1xxeu5jm
cXGD9W3VXsFS/Fu9xy+iiEt9n5z3Nzv9ET0tianCn7kot2nneVjk413kd/fP
X7nAYHtSumoekrYeXJXRwcURI6/UHoFcWD7RKDCicxHsPBH03OcFPgQ21l4e
4cLcf7yWYZ6O5HWbE21HKXsvAxYs+PcQZ/rv71XmchH68XhhkPc9qFt5M0p5
XDR3NFUXmt3ALMEvj6995yK33yJTzisOzDdbPQ/94uLuHNkUWbMwFHlmaGr9
ofL3VVK6y9QXt5eJ8//94+JTjcp/dxuvG/wPBW2gJw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6813#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-1.4209120770819543`, 1.4197301873838006`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"10.327414798880012`", " ", 
         SqrtBox[
          FractionBox["m", "EI"]]}], 
       RowBox[{"39.957717258709415`", " ", 
         SqrtBox[
          FractionBox["m", "EI"]]}], 
       RowBox[{"89.31278204384172`", " ", 
         SqrtBox[
          FractionBox["m", "EI"]]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7838051162088833`*^9, {3.783805178285964*^9, 3.7838051895221987`*^9}, 
   3.783805233007647*^9, 3.783865105157647*^9, 3.783865598133545*^9, {
   3.783865696606797*^9, 3.783865724896813*^9}, 3.7843218142216535`*^9, 
   3.784321876758213*^9, 3.784323289768155*^9, 3.8190623350736666`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"5ae6c2e2-97e1-44bc-aa3c-d6202fbb87b2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1306, 1314},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"20f307d1-55c4-49db-9fd2-92033546a90f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 481, 7, 96, "Title",ExpressionUUID->"9ec5461c-94d6-470b-87a5-037369f4d4fc"],
Cell[1064, 31, 50697, 838, 237, "Text",ExpressionUUID->"7d7ce76e-bfc7-4638-a6b9-7a8e030c04ce"],
Cell[CellGroupData[{
Cell[51786, 873, 596, 11, 48, "Input",ExpressionUUID->"84ca69d4-72b7-4ed7-b57d-12bf6473f62c"],
Cell[52385, 886, 632, 12, 32, "Output",ExpressionUUID->"33689173-b884-4965-853b-ab0d9d859ffd"]
}, Open  ]],
Cell[53032, 901, 217, 5, 34, "Text",ExpressionUUID->"c057dc00-9d71-4a5c-8dfc-74cbdc11555b"],
Cell[CellGroupData[{
Cell[53274, 910, 661, 16, 28, "Input",ExpressionUUID->"633dc384-f916-47f4-8e55-33d0a1c6b86f"],
Cell[53938, 928, 1131, 25, 32, "Output",ExpressionUUID->"9e482f4b-01f1-4220-bbd5-3cf2882338f8"]
}, Open  ]],
Cell[55084, 956, 159, 3, 34, "Text",ExpressionUUID->"05cd7986-865a-4530-8fd9-faf00c9a6f7c"],
Cell[CellGroupData[{
Cell[55268, 963, 667, 16, 28, "Input",ExpressionUUID->"772894fb-de7e-452f-a617-59cf75db14bf"],
Cell[55938, 981, 1648, 44, 32, "Output",ExpressionUUID->"15fd281f-793c-4b76-a9f3-8607b8a4152a"]
}, Open  ]],
Cell[57601, 1028, 188, 3, 34, "Text",ExpressionUUID->"2319a454-1cab-4a22-92e6-7b9179b61273"],
Cell[CellGroupData[{
Cell[57814, 1035, 712, 24, 28, "Input",ExpressionUUID->"d6b9c14f-c377-49be-b310-61d326396f5f"],
Cell[58529, 1061, 1213, 31, 32, "Output",ExpressionUUID->"0311d1f3-640b-4af2-817c-5a73048201c7"]
}, Open  ]],
Cell[59757, 1095, 179, 3, 34, "Text",ExpressionUUID->"a0d825e2-ad93-4d39-9d0a-86cec3c4cb98"],
Cell[CellGroupData[{
Cell[59961, 1102, 1895, 46, 124, "Input",ExpressionUUID->"c3b60b85-c20b-4e55-86b7-9398f9cb2e5d"],
Cell[61859, 1150, 3675, 109, 59, "Output",ExpressionUUID->"bce89112-8053-4d07-9b0e-ddf305d42acc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65571, 1264, 759, 17, 28, "Input",ExpressionUUID->"e837aa5b-79f9-44a6-aed4-c868ffe309b0"],
Cell[66333, 1283, 930, 17, 32, "Output",ExpressionUUID->"5cd40ec6-0367-4b62-ba53-1efeb9b8d3c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67300, 1305, 900, 20, 28, "Input",ExpressionUUID->"ff1331ad-3ac7-42bd-bbac-9183f8494957"],
Cell[68203, 1327, 948, 15, 32, "Output",ExpressionUUID->"66164a90-123e-4445-a26a-203d0cbdb54e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69188, 1347, 796, 20, 28, "Input",ExpressionUUID->"6bb9ae48-db51-4234-9cd4-1a1fc51276f4"],
Cell[69987, 1369, 712, 18, 32, "Output",ExpressionUUID->"c13329b0-3615-41aa-87dd-df19e43bbb31"]
}, Open  ]],
Cell[70714, 1390, 267, 6, 34, "Text",ExpressionUUID->"38131bf0-d807-43da-98e9-ee3ebe48a754"],
Cell[CellGroupData[{
Cell[71006, 1400, 1325, 28, 45, "Input",ExpressionUUID->"54de07a1-53b4-4a1d-8188-4e66a6cde3f8"],
Cell[72334, 1430, 1314, 25, 32, "Output",ExpressionUUID->"efc6714f-07cb-403a-8f3e-a9f5cd5586bc"]
}, Open  ]],
Cell[73663, 1458, 278, 4, 34, "Text",ExpressionUUID->"0d9a1ad1-f4c4-48a9-8973-6a8a3cb94b55"],
Cell[CellGroupData[{
Cell[73966, 1466, 360, 7, 45, "Input",ExpressionUUID->"4c087b0b-ca68-4a41-8c9d-9f00038ddc60"],
Cell[74329, 1475, 782, 17, 32, "Output",ExpressionUUID->"eb7387c1-0998-4491-b657-b378d7b635ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75148, 1497, 711, 14, 28, "Input",ExpressionUUID->"44b3bf1e-2daa-445c-82f5-db8d431e8eab"],
Cell[75862, 1513, 14928, 261, 244, "Output",ExpressionUUID->"d4d1db7b-890f-418f-8cf8-8158d669d48d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90827, 1779, 591, 13, 28, "Input",ExpressionUUID->"b1171906-3cc9-4fa6-885c-c0d3ba06dd70"],
Cell[91421, 1794, 608, 12, 32, "Output",ExpressionUUID->"9bb86bea-50d0-4948-beb0-c8cf1043987e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92066, 1811, 366, 7, 43, "Input",ExpressionUUID->"bd3b2fa7-e57a-484d-b834-0cad3b279a13"],
Cell[92435, 1820, 560, 11, 49, "Output",ExpressionUUID->"deb15c4d-433d-4417-8a61-876dcb594b29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93032, 1836, 460, 10, 43, "Input",ExpressionUUID->"1000998f-5fd2-4cd8-85ac-af1629a83a46"],
Cell[93495, 1848, 740, 17, 54, "Output",ExpressionUUID->"302407aa-0f8d-4af8-adb0-db0ad33b18f2"]
}, Open  ]],
Cell[94250, 1868, 170, 3, 34, "Text",ExpressionUUID->"85166ff7-2fbc-455e-8138-191c9690d7ad"],
Cell[CellGroupData[{
Cell[94445, 1875, 464, 11, 28, "Input",ExpressionUUID->"2f697e20-5872-43f7-a63e-48f5d792fc73"],
Cell[94912, 1888, 819, 20, 32, "Output",ExpressionUUID->"548a396e-1c2f-4077-8372-e04b6bebe5ae"]
}, Open  ]],
Cell[95746, 1911, 226, 5, 34, "Text",ExpressionUUID->"91d0afde-0d2b-4035-8188-32fc4b3c41e4"],
Cell[CellGroupData[{
Cell[95997, 1920, 328, 7, 28, "Input",ExpressionUUID->"36bc8ff5-5728-4cff-bc27-ef561cbd6ec6"],
Cell[96328, 1929, 1540, 46, 49, "Output",ExpressionUUID->"813a22f2-f611-44f9-bc32-db37bed52139"]
}, Open  ]],
Cell[97883, 1978, 184, 3, 34, "Text",ExpressionUUID->"43f00f52-d521-4388-bde6-7bdca4b9d1db"],
Cell[CellGroupData[{
Cell[98092, 1985, 636, 17, 32, "Input",ExpressionUUID->"03cb25fc-cbec-4590-bb6e-0c33afc90f56"],
Cell[98731, 2004, 796, 24, 56, "Output",ExpressionUUID->"6cf26f5b-167f-47fa-9bab-57d0c7b37e33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99564, 2033, 486, 12, 28, "Input",ExpressionUUID->"4a7a78f3-66db-457e-8324-495edebc19cb"],
Cell[100053, 2047, 1608, 45, 62, "Output",ExpressionUUID->"ef9f3683-b117-4f17-95a5-b50f93a7c794"]
}, Open  ]],
Cell[101676, 2095, 171, 3, 34, "Text",ExpressionUUID->"34df8bf4-2805-47c1-bd50-71760e87cb72"],
Cell[CellGroupData[{
Cell[101872, 2102, 644, 13, 28, "Input",ExpressionUUID->"7205b9dc-8e31-4a25-99d1-095651912f75"],
Cell[102519, 2117, 42480, 779, 233, "Output",ExpressionUUID->"5ae6c2e2-97e1-44bc-aa3c-d6202fbb87b2"]
}, Open  ]]
}, Open  ]]
}
]
*)

